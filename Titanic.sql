DROP DATABASE IF EXISTS Titanic;
CREATE DATABASE Titanic;
USE Titanic;

CREATE TABLE Passenger(
PNumber INT(50) DEFAULT 0 NOT NULL,
PGender VARCHAR(50) DEFAULT 'UNK' NOT NULL,
PAge INT(50) DEFAULT 0 NOT NULL,
CONSTRAINT PK_PS PRIMARY KEY(PNumber)
);


CREATE TABLE Companions(
PNumber INT(50) DEFAULT 0 NOT NULL,
PSib INT(50) DEFAULT 0 NOT NULL,
PPOC INT(50) DEFAULT 0 NOT NULL,
CONSTRAINT PK_CP PRIMARY KEY(PNumber),
CONSTRAINT FK_CP FOREIGN KEY(PNumber) REFERENCES Passenger(PNumber)
);


CREATE TABLE Ticketing(
PNumber INT(50) DEFAULT 0 NOT NULL,
PClass INT(50) DEFAULT 0 NOT NULL,
TicketNumber VARCHAR(50) DEFAULT 'UNK' NOT NULL,
FarePrice DECIMAL(15,12) DEFAULT 0 NOT NULL,
Cabin VARCHAR(50) DEFAULT 'UNK' NOT NULL,
Embarked VARCHAR(50) DEFAULT 'UNK' NOT NULL,
CONSTRAINT PK_TK PRIMARY KEY(PNumber),
CONSTRAINT FK_TK FOREIGN KEY(PNumber) REFERENCES Passenger(PNumber)
);


CREATE TABLE Survival(
PNumber INT(50) DEFAULT 0 NOT NULL,
Survived INT(50) DEFAULT 0 NOT NULL,
CONSTRAINT PK_SR PRIMARY KEY(PNumber),
CONSTRAINT FK_SR FOREIGN KEY(PNumber) REFERENCES Passenger(PNumber)
);


CREATE TABLE PassengerName(
PNumber INT(50) DEFAULT 0 NOT NULL,
PName  VARCHAR(100) DEFAULT 'UNK' NOT NULL,
CONSTRAINT PK_PN PRIMARY KEY(PNumber),
CONSTRAINT FK_PN FOREIGN KEY(PNumber) REFERENCES Passenger(PNumber)
);

-- Display for confirmation
show tables;
select * from Passenger;
select * from Companions;
select * from Ticketing;
select * from Survival;
select * from PassengerName;